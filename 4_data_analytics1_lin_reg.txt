import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("datasets/Boston.csv")

df

df.isnull().sum()

target = df['medv']
features = df.drop(columns=['medv'], axis=1)

x_train, x_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

LR = LinearRegression()
LR.fit(x_train, y_train)

y_pred = LR.predict(x_test)
y_train_pred = LR.predict(x_train)

plt.figure(figsize=(8, 5))
plt.scatter(y_test, y_pred, c='red', label='Test Data')
plt.scatter(y_train, y_train_pred, c='blue', label='Train Data')
plt.xlabel('Actual MEDV')
plt.ylabel('Predicted MEDV')
plt.title('Actual vs Predicted Home Prices')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared Score: {r2:.2f}")
print(f"Accuracy is {r2*100:.2f}%")